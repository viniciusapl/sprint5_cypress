{
  "stats": {
    "suites": 4,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-09T15:49:29.335Z",
    "end": "2022-09-09T15:49:53.534Z",
    "duration": 6040,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2b3d0402-1c0d-4ae7-a386-132ec6faeb1d",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8ae328df-8a06-47ce-a7c3-6cc5d5a8e6b3",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar o login corretamente",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar o login corretamente",
              "timedOut": null,
              "duration": 585,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.validaLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "0ad508db-0fd3-4b32-a646-ff11064efe02",
              "parentUUID": "8ae328df-8a06-47ce-a7c3-6cc5d5a8e6b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar tentativa de login sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar tentativa de login sem sucesso",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = {\n  email: 'naoexiste@test.com',\n  password: '123'\n};\n_serverest.default.logar(usuario).then(res => {\n  cy.contractValidation(res, 'post-login', 400);\n  _validaServerest.default.validaLoginSemSucesso(res);\n});",
              "err": {},
              "uuid": "8b9a20f7-8149-4615-ae5d-9084665b2112",
              "parentUUID": "8ae328df-8a06-47ce-a7c3-6cc5d5a8e6b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ad508db-0fd3-4b32-a646-ff11064efe02",
            "8b9a20f7-8149-4615-ae5d-9084665b2112"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 795,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "85363dde-a76c-4df5-a19d-e24ed0044551",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d2122ff2-e3b6-4108-9455-bdd1d4951c95",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "b83d165d-2008-402b-8968-f8d7573d70f5",
              "parentUUID": "d2122ff2-e3b6-4108-9455-bdd1d4951c95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "cec5a263-5875-4952-8743-03985c68b2d9",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 641,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "b8401a11-a6fe-49a0-bbd1-859818487154",
                  "parentUUID": "cec5a263-5875-4952-8743-03985c68b2d9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a busca do produto cadastrado pelo Id",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve realizar a busca do produto cadastrado pelo Id",
                  "timedOut": null,
                  "duration": 664,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoCadastradoPorId().then(res => {\n  _validaServerest.default.validarBuscaDeProdutoCadastradoPorId(res);\n});",
                  "err": {},
                  "uuid": "29992169-6e55-469d-ae46-b3217b92461a",
                  "parentUUID": "cec5a263-5875-4952-8743-03985c68b2d9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve editar os dados do produto cadastrado com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve editar os dados do produto cadastrado com sucesso",
                  "timedOut": null,
                  "duration": 661,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutoCadastrado().then(res => {\n  _validaServerest.default.validarEdicaoDeProdutoCadastradoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "d3bc28af-58e0-4e7d-844b-135523859fb9",
                  "parentUUID": "cec5a263-5875-4952-8743-03985c68b2d9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir o produto cadastrado com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve excluir o produto cadastrado com sucesso",
                  "timedOut": null,
                  "duration": 671,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  _validaServerest.default.validarExclusaoDeProduto(res);\n});",
                  "err": {},
                  "uuid": "f136e9be-d2f4-415a-81e0-49a982369ead",
                  "parentUUID": "cec5a263-5875-4952-8743-03985c68b2d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8401a11-a6fe-49a0-bbd1-859818487154",
                "29992169-6e55-469d-ae46-b3217b92461a",
                "d3bc28af-58e0-4e7d-844b-135523859fb9",
                "f136e9be-d2f4-415a-81e0-49a982369ead"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2637,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b83d165d-2008-402b-8968-f8d7573d70f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 260,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5dc16241-8f08-40ce-a7c4-0c7a976b4388",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e14908b0-044e-4e30-9a30-8c388fb07c2d",
          "title": "Casos de teste sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os carrinhos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Deve buscar todos os carrinhos cadastrados",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, 'get-carrinhos', 200);\n  _validaServerest.default.validarBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "9d74263a-825c-44ef-a1e9-154f507ca882",
              "parentUUID": "e14908b0-044e-4e30-9a30-8c388fb07c2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d74263a-825c-44ef-a1e9-154f507ca882"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 326,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "be287a05-ab14-48a6-8f62-400896e7f5a3",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "69311202-48c2-4ff2-bc05-345e4a93ff97",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados",
              "timedOut": null,
              "duration": 572,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "8d72ea2e-bc44-49c8-af3f-18aba06cdb06",
              "parentUUID": "69311202-48c2-4ff2-bc05-345e4a93ff97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um novo usuário administrador",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um novo usuário administrador",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarNovoUsuario().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroDeUsuarioComSucesso(res);\n});",
              "err": {},
              "uuid": "6e264dda-ab1c-463d-802e-b936aecd2600",
              "parentUUID": "69311202-48c2-4ff2-bc05-345e4a93ff97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuário cadastrado pelo seu Id",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuário cadastrado pelo seu Id",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioPorId().then(res => {\n  _validaServerest.default.validarBuscaDeUsuarioPorId(res);\n});",
              "err": {},
              "uuid": "63f97daa-c202-444f-b840-034ea6c62770",
              "parentUUID": "69311202-48c2-4ff2-bc05-345e4a93ff97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar os dados do usuário cadastrado",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve editar os dados do usuário cadastrado",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.editarUsuarioCadastrado().then(res => {\n  _validaServerest.default.validarEdicaoDeUsuario(res);\n});",
              "err": {},
              "uuid": "a5c74a62-2225-4274-b3ac-e03ae1ef8ea9",
              "parentUUID": "69311202-48c2-4ff2-bc05-345e4a93ff97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve excluir o usuário cadastrado",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve excluir o usuário cadastrado",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.excluirUsuarioCadastrado().then(res => {\n  _validaServerest.default.validarExclusaoDeUsuario(res);\n});",
              "err": {},
              "uuid": "7dce30dc-4b8d-4b97-a377-dbab8992af50",
              "parentUUID": "69311202-48c2-4ff2-bc05-345e4a93ff97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuário de um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuário de um arquivo json",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('users.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validaLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "bac318ca-e571-4637-a42d-b99afa525ceb",
              "parentUUID": "69311202-48c2-4ff2-bc05-345e4a93ff97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário no arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuário no arquivo json",
              "timedOut": null,
              "duration": 293,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.log(JSON.stringify(res.body.usuarios[0]));\n  cy.writeFile('./cypress/fixtures/users.json', res.body.usuarios[0]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "1a5a24b3-c758-4cbf-a6ae-2697cff99073",
              "parentUUID": "69311202-48c2-4ff2-bc05-345e4a93ff97",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d72ea2e-bc44-49c8-af3f-18aba06cdb06",
            "6e264dda-ab1c-463d-802e-b936aecd2600",
            "63f97daa-c202-444f-b840-034ea6c62770",
            "a5c74a62-2225-4274-b3ac-e03ae1ef8ea9",
            "7dce30dc-4b8d-4b97-a377-dbab8992af50",
            "bac318ca-e571-4637-a42d-b99afa525ceb",
            "1a5a24b3-c758-4cbf-a6ae-2697cff99073"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2022,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}