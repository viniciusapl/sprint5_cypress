{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-12T16:33:25.191Z",
    "end": "2022-09-12T16:33:27.361Z",
    "duration": 2170,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "51674307-11c6-4ebc-8dfc-6409e49ce47e",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6bc8ca01-0f52-4ff5-83cb-a10e020f6292",
          "title": "Casos de teste sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os carrinhos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Deve buscar todos os carrinhos cadastrados",
              "timedOut": null,
              "duration": 555,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, 'get-carrinhos', 200);\n  _validaServerest.default.validarBuscaDeCarrinhos(res);\n});",
              "err": {
                "message": "Error: Erros encontrados na validação de contrato, por favor verifique: \n/carrinhos/0/produtos/0/quantidade must be integer, but received string\n/carrinhos/0/quantidadeTotal must be integer, but received string",
                "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: \n/carrinhos/0/produtos/0/quantidade must be integer, but received string\n/carrinhos/0/quantidadeTotal must be integer, but received string\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:166:13)",
                "diff": null
              },
              "uuid": "a16d1a7e-2c8b-4c92-bc9c-adf558d15e21",
              "parentUUID": "6bc8ca01-0f52-4ff5-83cb-a10e020f6292",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "b0316b71-923d-44d9-8664-6b1e3e22d97a",
              "title": "Realizar o login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve cadastrar um carrinho com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Realizar o login com sucesso Deve cadastrar um carrinho com sucesso",
                  "timedOut": null,
                  "duration": 890,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoParaCarrinho(); //Aqui eu faço a busca de um produto aleatório dentro da lista de produtos\n\ncy.get('@produtoParaCarrinho').then(produto => {\n  //O produto retornado na linha acima é chamado aqui no cy.get('@produtoParaCarrinho') e enviado para a próxima função para a adição do carrinho\n  _serverest.default.adicionarCarrinhoComSucesso(produto).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validarCadastroDeCarrinho(res);\n  });\n});",
                  "err": {},
                  "uuid": "6c7dd6d6-6748-436d-a8c3-7eb73c1eae6f",
                  "parentUUID": "b0316b71-923d-44d9-8664-6b1e3e22d97a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a exclusão do carrinho através da finalização da compra com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Realizar o login com sucesso Deve realizar a exclusão do carrinho através da finalização da compra com sucesso",
                  "timedOut": null,
                  "duration": 623,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompraComSucesso().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos-concluir-compra', 200);\n  _validaServerest.default.validarFinalizaçãoDeCompraComSucesso(res);\n});",
                  "err": {},
                  "uuid": "e63cd03b-e3f0-41eb-bcfc-91252f413433",
                  "parentUUID": "b0316b71-923d-44d9-8664-6b1e3e22d97a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6c7dd6d6-6748-436d-a8c3-7eb73c1eae6f",
                "e63cd03b-e3f0-41eb-bcfc-91252f413433"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1513,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [
            "a16d1a7e-2c8b-4c92-bc9c-adf558d15e21"
          ],
          "pending": [],
          "skipped": [],
          "duration": 555,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}